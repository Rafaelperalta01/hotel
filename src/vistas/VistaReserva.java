/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import accesoADatos.HabitacionData;
import accesoADatos.HuespedData;
import accesoADatos.ReservaData;
import accesoADatos.UsuariosData;
import entidades.Habitacion;
import entidades.Huesped;
import entidades.ProductoServicio;
import entidades.Reserva;
import entidades.Usuarios;
import java.awt.Color;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pc
 */
public class VistaReserva extends javax.swing.JInternalFrame {

    Usuarios usuario;
    public static ReservaData reserva = new ReservaData();
    HuespedData huesped = new HuespedData();
    HabitacionData habitacion = new HabitacionData();
    UsuariosData user = new UsuariosData();
    public static String numDniHuesped = "";
    public DefaultTableModel modeloTabla = new DefaultTableModel() {
        public boolean isCellEditable(int fila, int columna) {
            return false;
        }
    };

    /**
     * Creates new form VistaReserva
     */
    public VistaReserva(Usuarios u) {
        this.usuario = u;
        initComponents();
        armarCabecera();
        camposApagados();
        listaRegistros();

          jDCfechaEntrada.addPropertyChangeListener(new java.beans.PropertyChangeListener() {

            public void propertyChange(java.beans.PropertyChangeEvent evt) {

                if (jDCfechaEntrada.getDate() == null) {
                    jDCfechaEntrada.setMinSelectableDate(new Date());
                    jDCfechaSalida.setEnabled(false);
                    

                } else if ("date".equals(evt.getPropertyName())) {//captura el evento donde cambio la fecha

                    java.util.Date fechaActual = (java.util.Date) evt.getNewValue();
                    LocalDate fsalida = fechaActual.toInstant().atZone(ZoneId.systemDefault()).toLocalDate().plusDays(1);
                    java.util.Date fechanueva = Date.from(fsalida.atStartOfDay(ZoneId.systemDefault()).toInstant());
                    jDCfechaSalida.setEnabled(true);
                    jDCfechaSalida.setDate(null);
                    jDCfechaSalida.setMinSelectableDate(fechanueva);
                    jTHabitacion.setText("");
                    jTImporte.setText("");
                }
            }
        }
        );
          jDCfechaSalida.addPropertyChangeListener(new java.beans.PropertyChangeListener() {

            public void propertyChange(java.beans.PropertyChangeEvent evt) {

                if (jDCfechaSalida.getDate() == null){
                    return;
                } else if ("date".equals(evt.getPropertyName())) {//captura el evento donde cambio la fecha

                    jTHabitacion.setText("");
                    jTImporte.setText("");
                }
            }
        }
        );    
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelRegistroReserva = new javax.swing.JPanel();
        jTHabitacion = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jBBuscarTipoH = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTHusped = new javax.swing.JTextField();
        jBbuscarHuesped = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTAdmin = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTCantPersonas = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTImporte = new javax.swing.JTextField();
        jBCancelar = new javax.swing.JButton();
        jBGuardar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jDCfechaEntrada = new com.toedter.calendar.JDateChooser();
        jDCfechaSalida = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jPanelListadoRegistroReserva = new javax.swing.JPanel();
        jTBuscaReservas = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablareservas = new javax.swing.JTable();
        jBConsumos = new javax.swing.JButton();
        jBpago = new javax.swing.JButton();
        jBCheckIn = new javax.swing.JButton();
        jBcancelarReserva = new javax.swing.JButton();
        jTTotalRegistros = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();

        setClosable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelRegistroReserva.setBackground(new java.awt.Color(151, 60, 0));
        jPanelRegistroReserva.setLayout(null);

        jTHabitacion.setBackground(new java.awt.Color(151, 60, 0));
        jPanelRegistroReserva.add(jTHabitacion);
        jTHabitacion.setBounds(148, 250, 130, 24);

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Habitacion: ");
        jPanelRegistroReserva.add(jLabel2);
        jLabel2.setBounds(30, 254, 69, 15);

        jBBuscarTipoH.setBackground(new java.awt.Color(151, 60, 0));
        jBBuscarTipoH.setForeground(new java.awt.Color(255, 255, 255));
        jBBuscarTipoH.setText("buscar tipo hab");
        jBBuscarTipoH.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBBuscarTipoH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarTipoHActionPerformed(evt);
            }
        });
        jPanelRegistroReserva.add(jBBuscarTipoH);
        jBBuscarTipoH.setBounds(290, 250, 40, 32);

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Huesped:");
        jPanelRegistroReserva.add(jLabel3);
        jLabel3.setBounds(32, 317, 56, 15);

        jTHusped.setBackground(new java.awt.Color(151, 60, 0));
        jPanelRegistroReserva.add(jTHusped);
        jTHusped.setBounds(148, 305, 128, 24);

        jBbuscarHuesped.setBackground(new java.awt.Color(151, 60, 0));
        jBbuscarHuesped.setForeground(new java.awt.Color(255, 255, 255));
        jBbuscarHuesped.setText("buscar H");
        jBbuscarHuesped.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBbuscarHuesped.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBbuscarHuespedActionPerformed(evt);
            }
        });
        jPanelRegistroReserva.add(jBbuscarHuesped);
        jBbuscarHuesped.setBounds(290, 300, 40, 32);

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Administrador:");
        jPanelRegistroReserva.add(jLabel4);
        jLabel4.setBounds(30, 439, 86, 15);

        jTAdmin.setBackground(new java.awt.Color(151, 60, 0));
        jPanelRegistroReserva.add(jTAdmin);
        jTAdmin.setBounds(148, 425, 164, 24);

        jLabel7.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Cantidad Personas:");
        jPanelRegistroReserva.add(jLabel7);
        jLabel7.setBounds(30, 191, 112, 15);

        jTCantPersonas.setBackground(new java.awt.Color(151, 60, 0));
        jPanelRegistroReserva.add(jTCantPersonas);
        jTCantPersonas.setBounds(160, 180, 43, 24);

        jLabel8.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Importe:");
        jPanelRegistroReserva.add(jLabel8);
        jLabel8.setBounds(30, 378, 49, 15);

        jTImporte.setBackground(new java.awt.Color(151, 60, 0));
        jPanelRegistroReserva.add(jTImporte);
        jTImporte.setBounds(148, 363, 130, 24);

        jBCancelar.setBackground(new java.awt.Color(151, 60, 0));
        jBCancelar.setForeground(new java.awt.Color(255, 255, 255));
        jBCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/eliminar.png"))); // NOI18N
        jBCancelar.setText("Cancelar");
        jBCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });
        jPanelRegistroReserva.add(jBCancelar);
        jBCancelar.setBounds(254, 525, 112, 37);

        jBGuardar.setBackground(new java.awt.Color(151, 60, 0));
        jBGuardar.setForeground(new java.awt.Color(255, 255, 255));
        jBGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/guardar.png"))); // NOI18N
        jBGuardar.setText("Guardar");
        jBGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGuardarActionPerformed(evt);
            }
        });
        jPanelRegistroReserva.add(jBGuardar);
        jBGuardar.setBounds(51, 525, 103, 36);

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Fecha de Entrada:");
        jPanelRegistroReserva.add(jLabel6);
        jLabel6.setBounds(30, 75, 105, 15);

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Fecha de Salida:");
        jPanelRegistroReserva.add(jLabel5);
        jLabel5.setBounds(30, 132, 94, 15);

        jDCfechaEntrada.setBackground(new java.awt.Color(151, 60, 0));
        jPanelRegistroReserva.add(jDCfechaEntrada);
        jDCfechaEntrada.setBounds(162, 70, 180, 29);

        jDCfechaSalida.setBackground(new java.awt.Color(151, 60, 0));
        jPanelRegistroReserva.add(jDCfechaSalida);
        jDCfechaSalida.setBounds(162, 118, 180, 29);

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Registro de reservas");
        jPanelRegistroReserva.add(jLabel1);
        jLabel1.setBounds(30, 6, 175, 22);

        getContentPane().add(jPanelRegistroReserva, new org.netbeans.lib.awtextra.AbsoluteConstraints(-3, 1, 390, 610));

        jPanelListadoRegistroReserva.setBackground(new java.awt.Color(151, 60, 0));

        jTBuscaReservas.setBackground(new java.awt.Color(151, 60, 0));
        jTBuscaReservas.setForeground(new java.awt.Color(255, 255, 255));
        jTBuscaReservas.setText("Busca reserva por Nombre, DNI o Nªde Reserva ");
        jTBuscaReservas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTBuscaReservasFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTBuscaReservasFocusLost(evt);
            }
        });
        jTBuscaReservas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTBuscaReservasKeyReleased(evt);
            }
        });

        jTablareservas.setBackground(new java.awt.Color(151, 60, 0));
        jTablareservas.setForeground(new java.awt.Color(255, 255, 255));
        jTablareservas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTablareservas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablareservasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTablareservas);

        jBConsumos.setBackground(new java.awt.Color(151, 60, 0));
        jBConsumos.setForeground(new java.awt.Color(255, 255, 255));
        jBConsumos.setText("Consumos");
        jBConsumos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBConsumos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConsumosActionPerformed(evt);
            }
        });

        jBpago.setBackground(new java.awt.Color(151, 60, 0));
        jBpago.setForeground(new java.awt.Color(255, 255, 255));
        jBpago.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/plata.png"))); // NOI18N
        jBpago.setText("Realizar Pago");
        jBpago.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBpago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBpagoActionPerformed(evt);
            }
        });

        jBCheckIn.setBackground(new java.awt.Color(151, 60, 0));
        jBCheckIn.setForeground(new java.awt.Color(255, 255, 255));
        jBCheckIn.setText("CheckIn");
        jBCheckIn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBCheckIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCheckInActionPerformed(evt);
            }
        });

        jBcancelarReserva.setBackground(new java.awt.Color(151, 60, 0));
        jBcancelarReserva.setForeground(new java.awt.Color(255, 255, 255));
        jBcancelarReserva.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/eliminar.png"))); // NOI18N
        jBcancelarReserva.setText("Cancelar Reserva");
        jBcancelarReserva.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBcancelarReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBcancelarReservaActionPerformed(evt);
            }
        });

        jTTotalRegistros.setBackground(new java.awt.Color(151, 60, 0));
        jTTotalRegistros.setForeground(new java.awt.Color(255, 255, 255));
        jTTotalRegistros.setText("Total de registros:");

        jLabel9.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Listado de Reservas...");

        javax.swing.GroupLayout jPanelListadoRegistroReservaLayout = new javax.swing.GroupLayout(jPanelListadoRegistroReserva);
        jPanelListadoRegistroReserva.setLayout(jPanelListadoRegistroReservaLayout);
        jPanelListadoRegistroReservaLayout.setHorizontalGroup(
            jPanelListadoRegistroReservaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelListadoRegistroReservaLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jBConsumos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(jBpago)
                .addGap(18, 18, 18)
                .addComponent(jBCheckIn)
                .addGap(290, 290, 290))
            .addGroup(jPanelListadoRegistroReservaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelListadoRegistroReservaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelListadoRegistroReservaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jTTotalRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanelListadoRegistroReservaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 626, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelListadoRegistroReservaLayout.createSequentialGroup()
                                .addComponent(jTBuscaReservas, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jBcancelarReserva))))
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelListadoRegistroReservaLayout.setVerticalGroup(
            jPanelListadoRegistroReservaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelListadoRegistroReservaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addGap(31, 31, 31)
                .addGroup(jPanelListadoRegistroReservaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTBuscaReservas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBcancelarReserva))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTTotalRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(jPanelListadoRegistroReservaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBConsumos)
                    .addComponent(jBpago)
                    .addComponent(jBCheckIn))
                .addGap(49, 49, 49))
        );

        getContentPane().add(jPanelListadoRegistroReserva, new org.netbeans.lib.awtextra.AbsoluteConstraints(393, 1, 650, 610));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBbuscarHuespedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBbuscarHuespedActionPerformed
        listaHuespedes huesped = new listaHuespedes();
        Menu.escritorio.add(huesped);
        huesped.moveToFront();
        huesped.setVisible(true);
    }//GEN-LAST:event_jBbuscarHuespedActionPerformed

    private void jBBuscarTipoHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarTipoHActionPerformed
        if (habilitaLista()) {
            listaHabitacionReserva reserva = new listaHabitacionReserva(usuario);
            Menu.escritorio.add(reserva);
            reserva.moveToFront();
            reserva.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Complete los campos de fechas de ingreso, fecha de salida y cantidad de personas ");
            jTHabitacion.setText("");
        }
    }//GEN-LAST:event_jBBuscarTipoHActionPerformed

    private void jBGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGuardarActionPerformed
     
      if ((habilitaLista()) && (!jTHabitacion.getText().isEmpty()) && (!jTHusped.getText().isEmpty())) {
            
            Huesped hues = huesped.buscarHuespedPorDni(numDniHuesped);
            Habitacion hab = habitacion.buscarHabitacion(Integer.parseInt(jTHabitacion.getText()));
            hab.setEstado(false);
            habitacion.modificarHabitacion(hab);// la habitacion esta ocupada
            
            LocalDate entrada = jDCfechaEntrada.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            LocalDate salida = jDCfechaSalida.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

            double importe = Double.parseDouble(jTImporte.getText().toString());
            int canPersonas = Integer.parseInt(jTCantPersonas.getText().toString());
            
            Reserva res = new Reserva(hab,hues,usuario,entrada,salida,importe,canPersonas,true);
            reserva.crearReserva(res);
            JOptionPane.showMessageDialog(null, "Se realizó una reserva ");
            limpiaCampos();
            listaRegistros();
            jBGuardar.setEnabled(true);

        } else {
            JOptionPane.showMessageDialog(null, "Complete todos los campos para poder generar un registro ");
        }
    }//GEN-LAST:event_jBGuardarActionPerformed

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        limpiaCampos();
        jBGuardar.setEnabled(true);
        jTablareservas.clearSelection();

    }//GEN-LAST:event_jBCancelarActionPerformed

    private void jTablareservasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablareservasMouseClicked

        SimpleDateFormat forma = new SimpleDateFormat("yyyy-MM-dd");
        if (evt.getClickCount() == 2) {
            
            jBGuardar.setEnabled(false);
            int fila = jTablareservas.getSelectedRow();
            
            if (fila != -1) {
                try {
                    String fechaE =jTablareservas.getValueAt(fila, 5).toString();
                    String fechaS =jTablareservas.getValueAt(fila, 6).toString();
                    java.util.Date f =forma.parse(fechaE);
                    java.util.Date s = forma.parse(fechaS);
                    jDCfechaEntrada.setDate(f);
                    jDCfechaSalida.setDate(s);
                    jTCantPersonas.setText(jTablareservas.getValueAt(fila, 8).toString());
                    jTHabitacion.setText(jTablareservas.getValueAt(fila, 7).toString());
                    jTHusped.setText(jTablareservas.getValueAt(fila, 1).toString() + jTablareservas.getValueAt(fila, 2).toString());
                    jTImporte.setText(jTablareservas.getValueAt(fila, 9).toString());                    
                    Usuarios us = user.obtenerUsuarioId(Integer.parseInt(jTablareservas.getValueAt(fila, 10).toString()));
                    jTAdmin.setText(us.getNombre()+", "+us.getCargo());
                } catch (ParseException ex) {
                    JOptionPane.showMessageDialog(null,"Se produjo un error en el ingreso de la fecha"+ex.getMessage());
                }

            }
        }
    }//GEN-LAST:event_jTablareservasMouseClicked

    private void jBConsumosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConsumosActionPerformed
        if (modeloTabla.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "La tabla esta vacía");

        } else {
            int fila = jTablareservas.getSelectedRow();
            if ((fila != -1)&&((habilitaLista()) && (!jTHabitacion.getText().isEmpty()) && (!jTHusped.getText().isEmpty()))) {
                if (jTablareservas.getValueAt(fila,11)!= null){
                Consumos.idReserva = Integer.parseInt(jTablareservas.getValueAt(fila, 0).toString());
                Consumos consu = new Consumos();
                Menu.escritorio.add(consu);
                consu.moveToFront();
                consu.setVisible(true);   
                }else{
                JOptionPane.showMessageDialog(null, "La persona no se encuentra hospedada ");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Seleccione un registro con doble click para agregarle un consumo ");
            }
        }
    }//GEN-LAST:event_jBConsumosActionPerformed

    private void jBpagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBpagoActionPerformed
      if (modeloTabla.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "La tabla esta vacía");

        } else {
            int fila = jTablareservas.getSelectedRow();
           if ((fila != -1)&& (!jTHabitacion.getText().isEmpty()) && (!jTHusped.getText().isEmpty())) {
                PagosView.idReserva = Integer.parseInt(jTablareservas.getValueAt(fila,0).toString());
                PagosView pago = new PagosView();
                Menu.escritorio.add(pago);
                pago.moveToFront();
                pago.setVisible(true);     
                
            } else {
                JOptionPane.showMessageDialog(null, "Seleccione un registro con doble click para realizar el pago");
            }
        }
         
    }//GEN-LAST:event_jBpagoActionPerformed

    private void jTBuscaReservasFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTBuscaReservasFocusGained
        jTBuscaReservas.setText("");
    }//GEN-LAST:event_jTBuscaReservasFocusGained

    private void jTBuscaReservasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTBuscaReservasFocusLost
       jTBuscaReservas.setText("Busca reserva por Nombre, DNI o Nªde Reserva ");
    }//GEN-LAST:event_jTBuscaReservasFocusLost

    private void jTBuscaReservasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTBuscaReservasKeyReleased
     borrarFilas();
        for (Reserva r : reserva.listarReserva()) {
            jTBuscaReservas.getText().toLowerCase();
            if ((r.getIdHuesped().getNombre().toLowerCase().startsWith(jTBuscaReservas.getText()))
                    || (r.getIdHuesped().getNumeroDocumento().startsWith(jTBuscaReservas.getText()))
                    || (String.valueOf(r.getIdReserva()).startsWith(jTBuscaReservas.getText()))) {

                modeloTabla.addRow(new Object[]{
                    r.getIdReserva(),
                    r.getIdHuesped().getNombre(),
                    r.getIdHuesped().getApellido(),
                    r.getIdHuesped().getTipoDocumento(),
                    r.getIdHuesped().getNumeroDocumento(),
                    r.getFechaEntrada(),
                    r.getFechaSalida(),
                    r.getIdHabitacion().getNumHabitacion(),
                    r.getIdHabitacion().getIdTipoHabitacion().getCantPersonas(),
                    r.getImporteTotal(),
                    r.getIdUsuarios().getIdUsuario(),
                    r.getCheckIn()
                });
            }
        }
    }//GEN-LAST:event_jTBuscaReservasKeyReleased

    private void jBCheckInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCheckInActionPerformed

        if (modeloTabla.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "La tabla esta vacía");

        } else {
            int fila = jTablareservas.getSelectedRow();
           
            
            if ((fila != -1) && (!jTHabitacion.getText().isEmpty()) && (!jTHusped.getText().isEmpty())) {

                LocalDate hoy = LocalDate.now();
                LocalDate fechaE = (LocalDate) jTablareservas.getValueAt(fila, 5);
                int idreserva = Integer.parseInt(jTablareservas.getValueAt(fila, 0).toString());
                Reserva r = reserva.buscarReservaId(idreserva);

                if (r.getCheckIn() == null) {
                    if (hoy.equals(fechaE)) {
                        r.realizarCheckIn();
                        reserva.modificarCheckInReserva(idreserva, r.getCheckIn());
                    } else {
                        JOptionPane.showMessageDialog(null, "El CheckIn debe coincidir con la fecha de inicio de la Reserva ");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Este registro ya tiene un check-in registrado. No se puede realizar otro check-in en la misma reserva.");
                }
                limpiaCampos();             
                listaRegistros();
                jBGuardar.setEnabled(true);
 
            } else {
                JOptionPane.showMessageDialog(null, "Seleccione un registro con doble click ");
            }
        }
    }//GEN-LAST:event_jBCheckInActionPerformed

    private void jBcancelarReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBcancelarReservaActionPerformed
       if (modeloTabla.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "La tabla esta vacía");

        } else {
            int fila = jTablareservas.getSelectedRow();
            if ((fila != -1)&&(!jTHabitacion.getText().isEmpty()) && (!jTHusped.getText().isEmpty())) {
                int idreserva = Integer.parseInt(jTablareservas.getValueAt(fila, 0).toString());
                Reserva r = reserva.buscarReservaId(idreserva);
                if (jTablareservas.getValueAt(fila, 11) == null) {
                    reserva.cancelarReserva(idreserva);
                    JOptionPane.showMessageDialog(null, "Reserva cancelada");
                } else {
                    JOptionPane.showMessageDialog(null, "Este registro ya tiene un check In, no se puede cancelar");
                }
                limpiaCampos();
                listaRegistros();
                jBGuardar.setEnabled(true);

            } else {
                JOptionPane.showMessageDialog(null, "Seleccione un registro con doble click ");
            }
        }
    }//GEN-LAST:event_jBcancelarReservaActionPerformed
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBBuscarTipoH;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBCheckIn;
    private javax.swing.JButton jBConsumos;
    public static javax.swing.JButton jBGuardar;
    private javax.swing.JButton jBbuscarHuesped;
    private javax.swing.JButton jBcancelarReserva;
    private javax.swing.JButton jBpago;
    public static com.toedter.calendar.JDateChooser jDCfechaEntrada;
    public static com.toedter.calendar.JDateChooser jDCfechaSalida;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanelListadoRegistroReserva;
    private javax.swing.JPanel jPanelRegistroReserva;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTextField jTAdmin;
    private javax.swing.JTextField jTBuscaReservas;
    public static javax.swing.JTextField jTCantPersonas;
    public static javax.swing.JTextField jTHabitacion;
    public static javax.swing.JTextField jTHusped;
    public static javax.swing.JTextField jTImporte;
    public static javax.swing.JTextField jTTotalRegistros;
    public static javax.swing.JTable jTablareservas;
    // End of variables declaration//GEN-END:variables
  
    public boolean habilitaLista() {
        boolean aux = false;

        if ((jDCfechaEntrada.getDate() != null)
                && (jDCfechaSalida.getDate() != null)
                && (!jTCantPersonas.getText().isEmpty())) {
            try {
                int cantp = Integer.parseInt(jTCantPersonas.getText());
                if (cantp < 0) {
                    JOptionPane.showMessageDialog(null, "La cantidad de personas no puede ser menor que cero");
                    jTCantPersonas.setText("");
                    aux = false;
                } else {
                    aux = true;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Este campo acepta solo números");
                jTCantPersonas.setText("");
            }
        }
        return aux;
    }

    private void armarCabecera() {
        modeloTabla.addColumn("idReserva");//0
        modeloTabla.addColumn("Nombre Huesped");//1
        modeloTabla.addColumn("Apellido Huesped");//2
        modeloTabla.addColumn("Tipo de Documento");//3
        modeloTabla.addColumn("Numero de Documento");//4    
        modeloTabla.addColumn("Fecha entrada");//5
        modeloTabla.addColumn("Fecha de salida");//6
        modeloTabla.addColumn("NºHabitación ");//7
        modeloTabla.addColumn("Cant.Personas");//8
        modeloTabla.addColumn("Importe total");//9
        modeloTabla.addColumn("Usuario");//10
        modeloTabla.addColumn("CheckIn");//11

        jTablareservas.setModel(modeloTabla);
    }

    public static void cargarTabla(Reserva r) {
    DefaultTableModel modeloTabla = (DefaultTableModel) jTablareservas.getModel();    
           modeloTabla.addRow(new Object[]{
            r.getIdReserva(),
            r.getIdHuesped().getNombre(),
            r.getIdHuesped().getApellido(),
            r.getIdHuesped().getTipoDocumento(),
            r.getIdHuesped().getNumeroDocumento(),
            r.getFechaEntrada(),
            r.getFechaSalida(),
            r.getIdHabitacion().getNumHabitacion(),
            r.getIdHabitacion().getIdTipoHabitacion().getCantPersonas(),
            r.getImporteTotal(),
            r.getIdUsuarios().getIdUsuario(),
            r.getCheckIn()

        });
    }

    public static void listaRegistros() {
     DefaultTableModel modeloTabla = (DefaultTableModel) jTablareservas.getModel();
        limpia();
        int registro = 0;

        for (Reserva res : reserva.listarReserva()) {
            cargarTabla(res);
            registro++;
        }
        modeloTabla.fireTableDataChanged();
        jTTotalRegistros.setText("Total de registros: " + registro);
        jTablareservas.clearSelection();
        jTablareservas.repaint();
    }

    public void camposApagados() {
        jTHabitacion.setEditable(false);
        jTHusped.setEditable(false);
        jTImporte.setEditable(false);
        jTAdmin.setEditable(false);
    }

    public static void limpiaCampos() {
        jTHabitacion.setText("");
        jTHusped.setText("");
        jDCfechaEntrada.setDate(null);
        jDCfechaSalida.setDate(null);
        jTCantPersonas.setText("");
        jTImporte.setText("");
        jTAdmin.setText("");

    }
     private void borrarFilas() {

        int filas = jTablareservas.getRowCount() - 1;
        for (; filas >= 0; filas--) {
            modeloTabla.removeRow(filas);
        }
    }
     
    public static void limpia() {
    DefaultTableModel modeloTabla = (DefaultTableModel) jTablareservas.getModel();
    int fila = modeloTabla.getRowCount();
    
    for (int i = fila - 1; i >= 0; i--) {
        modeloTabla.removeRow(i);
    }
    
    // Notificar a la vista que se han realizado cambios en el modelo de la tabla
    modeloTabla.fireTableDataChanged();
}

    
    
    
}// fin class
